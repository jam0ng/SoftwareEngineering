{"ast":null,"code":"var _jsxFileName = \"C:\\\\SoftwareEngineering\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\nconst QuizWord = () => {\n  _s();\n  const [quiz, setQuiz] = useState(null);\n  const [selected, setSelected] = useState('');\n  const [result, setResult] = useState('');\n  const [count, setCount] = useState(1);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n  const fetchQuiz = async () => {\n    setResult('');\n    setSelected('');\n    const res = await fetch('http://localhost:5000/api/quiz/word');\n    const data = await res.json();\n    setQuiz(data);\n  };\n\n  // ‚úÖ ÏïàÏ†ÑÌïòÍ≤å Ïù¥ÎèôÌïòÎäî useEffect\n  useEffect(() => {\n    if (count > TOTAL_QUESTIONS) {\n      navigate('/quiz-result', {\n        state: {\n          score,\n          total: TOTAL_QUESTIONS\n        }\n      });\n    }\n  }, [count, navigate, score]);\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n  const handleChoice = choice => {\n    setSelected(choice);\n    if (choice === quiz.correct) {\n      setResult('‚úÖ Ï†ïÎãµÏûÖÎãàÎã§!');\n      setScore(prev => prev + 1);\n    } else {\n      setResult(`‚ùå Ïò§ÎãµÏûÖÎãàÎã§! Ï†ïÎãµ: ${quiz.correct}`);\n    }\n  };\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uD034\\uC988 \\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83E\\uDDE0 \\uD034\\uC988 \", count, \" / \", TOTAL_QUESTIONS]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quiz.english\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: quiz.choices.map((choice, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !!result,\n        onClick: () => handleChoice(choice),\n        children: choice\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n          fetchQuiz();\n        },\n        children: \"\\uB2E4\\uC74C \\uBB38\\uC81C \\u25B6\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"\\uBA54\\uC778\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizWord, \"e+jrNM0MwhRL9uVUyg8W6WcUphc=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizWord;\nexport default QuizWord;\nvar _c;\n$RefreshReg$(_c, \"QuizWord\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TOTAL_QUESTIONS","QuizWord","_s","quiz","setQuiz","selected","setSelected","result","setResult","count","setCount","score","setScore","navigate","fetchQuiz","res","fetch","data","json","state","total","handleChoice","choice","correct","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","maxWidth","margin","english","display","flexDirection","gap","choices","map","idx","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/SoftwareEngineering/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst TOTAL_QUESTIONS = 10;\n\nconst QuizWord = () => {\n  const [quiz, setQuiz] = useState(null);\n  const [selected, setSelected] = useState('');\n  const [result, setResult] = useState('');\n  const [count, setCount] = useState(1);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n\n  const fetchQuiz = async () => {\n    setResult('');\n    setSelected('');\n    const res = await fetch('http://localhost:5000/api/quiz/word');\n    const data = await res.json();\n    setQuiz(data);\n  };\n\n  // ‚úÖ ÏïàÏ†ÑÌïòÍ≤å Ïù¥ÎèôÌïòÎäî useEffect\n  useEffect(() => {\n    if (count > TOTAL_QUESTIONS) {\n      navigate('/quiz-result', { state: { score, total: TOTAL_QUESTIONS } });\n    }\n  }, [count, navigate, score]);\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n  const handleChoice = (choice) => {\n    setSelected(choice);\n    if (choice === quiz.correct) {\n      setResult('‚úÖ Ï†ïÎãµÏûÖÎãàÎã§!');\n      setScore(prev => prev + 1);\n    } else {\n      setResult(`‚ùå Ïò§ÎãµÏûÖÎãàÎã§! Ï†ïÎãµ: ${quiz.correct}`);\n    }\n  };\n\n  if (!quiz) return <p>ÌÄ¥Ï¶à Î°úÎî© Ï§ë...</p>;\n\n  return (\n    <div style={{ padding: '2rem', maxWidth: '600px', margin: 'auto' }}>\n      <h2>üß† ÌÄ¥Ï¶à {count} / {TOTAL_QUESTIONS}</h2>\n      <h3>{quiz.english}</h3>\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n        {quiz.choices.map((choice, idx) => (\n          <button\n            key={idx}\n            disabled={!!result}\n            onClick={() => handleChoice(choice)}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n      <p>{result}</p>\n\n      {result && (\n        <>\n          <button onClick={() => {\n            setCount(count + 1);\n            fetchQuiz();\n          }}>Îã§Ïùå Î¨∏Ï†ú ‚ñ∂Ô∏è</button>\n          <br /><br />\n          <button onClick={() => navigate('/')}>Î©îÏù∏ÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QuizWord;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,eAAe,GAAG,EAAE;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BN,SAAS,CAAC,EAAE,CAAC;IACbF,WAAW,CAAC,EAAE,CAAC;IACf,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IAC9D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7Bd,OAAO,CAACa,IAAI,CAAC;EACf,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACd,IAAIgB,KAAK,GAAGT,eAAe,EAAE;MAC3Ba,QAAQ,CAAC,cAAc,EAAE;QAAEM,KAAK,EAAE;UAAER,KAAK;UAAES,KAAK,EAAEpB;QAAgB;MAAE,CAAC,CAAC;IACxE;EACF,CAAC,EAAE,CAACS,KAAK,EAAEI,QAAQ,EAAEF,KAAK,CAAC,CAAC;EAE5BlB,SAAS,CAAC,MAAM;IACdqB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,MAAM,IAAK;IAC/BhB,WAAW,CAACgB,MAAM,CAAC;IACnB,IAAIA,MAAM,KAAKnB,IAAI,CAACoB,OAAO,EAAE;MAC3Bf,SAAS,CAAC,UAAU,CAAC;MACrBI,QAAQ,CAACY,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLhB,SAAS,CAAC,gBAAgBL,IAAI,CAACoB,OAAO,EAAE,CAAC;IAC3C;EACF,CAAC;EAED,IAAI,CAACpB,IAAI,EAAE,oBAAON,OAAA;IAAA4B,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEnC,oBACEhC,OAAA;IAAKiC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAR,QAAA,gBACjE5B,OAAA;MAAA4B,QAAA,GAAI,4BAAM,EAAChB,KAAK,EAAC,KAAG,EAACT,eAAe;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1ChC,OAAA;MAAA4B,QAAA,EAAKtB,IAAI,CAAC+B;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBhC,OAAA;MAAKiC,KAAK,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAZ,QAAA,EACnEtB,IAAI,CAACmC,OAAO,CAACC,GAAG,CAAC,CAACjB,MAAM,EAAEkB,GAAG,kBAC5B3C,OAAA;QAEE4C,QAAQ,EAAE,CAAC,CAAClC,MAAO;QACnBmC,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAACC,MAAM,CAAE;QAAAG,QAAA,EAEnCH;MAAM,GAJFkB,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhC,OAAA;MAAA4B,QAAA,EAAIlB;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEdtB,MAAM,iBACLV,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA;QAAQ6C,OAAO,EAAEA,CAAA,KAAM;UACrBhC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;UACnBK,SAAS,CAAC,CAAC;QACb,CAAE;QAAAW,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpBhC,OAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAhC,OAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACZhC,OAAA;QAAQ6C,OAAO,EAAEA,CAAA,KAAM7B,QAAQ,CAAC,GAAG,CAAE;QAAAY,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACxD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApEID,QAAQ;EAAA,QAMKN,WAAW;AAAA;AAAAgD,EAAA,GANxB1C,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}